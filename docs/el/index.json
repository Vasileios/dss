[
{
	"uri": "https://vasileios.github.io/ac-sc/el/",
	"title": "Αλγοριθμική Σύνθεση",
	"tags": [],
	"description": "",
	"content": " Αλγοριθμικη Συνθεση Αλγοριθμική Σύνθεση και Δόμηση Ήχου\n\u0026ldquo;Τεχνών Ήχου και Εικόνας\u0026rdquo;\nΙόνιο Πανεπιστήμιο\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/introduction/",
	"title": "Εισαγωγή",
	"tags": [],
	"description": "",
	"content": "Chapter 1 Αλγοριθμικη Συνθεση Ο αλγόριθμος είναι:\n Ένα σύνολο μαθηματικών οδηγιών που πρέπει να ακολουθηθούν για τον υπολογισμό μιας απάντησης σε ένα μαθηματικό πρόβλημα. Μια συστηματική διαδικασία που παράγει - σε ένα πεπερασμένο αριθμό βημάτων την απάντηση σε μια ερώτηση ή τη λύση ενός προβλήματος. [...] (ιδίως για υπολογιστές) ένα σύνολο κανόνων που πρέπει να ακολουθηθούν για να επιλυθεί ένα συγκεκριμένο πρόβλημα. (Nierhaus 2009 σ.2)  "
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/introduction/hisrory/",
	"title": "Ιστορία",
	"tags": [],
	"description": "",
	"content": "chapter 1 Ιστορια Μουσική και μαθηματικά.\nΠυθαγόρας\nΟ ήχος των σφυριών των σιδηρουργών έκανε τον Πυθαγόρα να βγάλει σημαντικά συμπεράσματα σχετικά με τη φύση του τονισμού και τα μαθηματικά με βάση την αρμονία μετά τη σύγκριση των τονισμών που έγιναν απο τα σφυριά.\nGuido D'Arrezo\nΕπίσης, στο πλαίσιο της αλγοριθμικής σύνθεσης, γύρω στο AD 1000 είχε αναπτυχθεί η πρώτη προσέγγιση στην αυτόματη γένεση της μουσικής δομής. Ο Guido του Arezzo (γύρω στο 991-1031) συνέβαλε στην ανάπτυξη της σημειογραφίας, ανέπτυξε το 'solfeggio' (1025) και ήταν ένας σημαντικός μουσικός θεωρητικός της μεσαιωνικής εποχής. Ένα από τα σημαντικότερα έργα του, το \"Micrologus\", είναι η πρώτη συλλογή της μονοδικής και πολυφωνικής πρακτικής τραγουδιού. Εφηύρε μια μέθοδο για την αυτόματη μετατροπή του κειμένου σε μελωδικές φράσεις.\nΓνωστά παραδείγματα, όπως η τεχνική των δώδεκα τόνων του Bach \"The Art of Fugue\" ή η τεχνική του Schönberg, οδηγούν συχνά στην ανάπτυξη της τυπικής πολυπλοκότητας αποκλειστικά στο πλαίσιο της ευρωπαϊκής ή δυτικής μουσικής τέχνης.\nArs Magna\nΑν οι προαναφερθείσες αρχές αντιπροσωπεύουν τις αρχές της αλγοριθμικής χειραγώγηση του μουσικού υλικού, τότε το \"Ars Magna\" του Raimundus Lullus διαπραγματεύεται αποτελεσματικά την έννοια του υπολογιστή (μουσικό) σύστημα.\nKircher\nΣτο εξαντλητικό μουσικολογικό έργο του \"Musurgia Universalis\" από το 1650. Μία απο τις δημιουργίες του ήταν και μια συσκευή που είχε ως σκοπό τη σύνθεση εκκλησιαστικής μουσικής απο μή μουσικούς. Το Arca Musarithmica θεωρείται αλγοριθμική σύνθεση σε φυσική μορφή.\nδείτε εδω περισσότερα\nLeibniz (1646-1716)\nLeibniz\n\"Καθολική γλώσσα\"\nΤυποποίηση των επιστημών.\n..υποδομήστε τη λύση οποιουδήποτε επιστημονικού προβλήματος μέσα σε ένα ολοκληρωμένο Λογισμό.\nΗ έννοια της καθολικής γλώσσας ήταν επίσης ένα όραμα διακρατικής επικοινωνίας στην Ευρώπη μετά τον τριακονταετή πόλεμο.\nΠροϋποθέσεις του προγράμματος:\n Προκατασκευή εγκυκλοπαίδειας (ορισμοί) για τις τυπικές επιστήμες.   Ανάπτυξη ενός επίσημου συστήματος, δηλαδή \"lingua universalis\", στο οποίο μπορούν να κωδικοποιηθούν όλοι οι επιστημονικοί όροι.   Δημιουργία του \"λογισμού εγκυρότητας\" που θα επιτρέψει τη σύνδεση όλων των όρων της παγκόσμιας γλώσσας με λογικές λειτουργίες.  Χρήση συμβόλων για την αναπαραγωγή όλων των επιστημονικών όρων.\nΩς σύνολο συμβόλων, ο Λαίμπνιτς επέλεξε να είναι η ομάδα των φυσικών αριθμών.\nΓια παράδειγμα,\n  Πράγμα = 2  Όν = 6 = 2 * 3  Ανθρώπινο Όν = 30 = 6 * 5  κ.λπ.  \"Η μουσική είναι μια ασκούμενη μαθηματική εξάσκηση, το nescientis είναι αριθμητική animi\" (\"Η μουσική είναι μια κρυμμένη αριθμητική άσκηση της ψυχής, η οποία δεν γνωρίζει ότι μετράει\").\nΥπολογιστική διαδικασία \u0026 μηχανές\nΗ μηχανοποίηση των υπολογιστικών διαδικασιών, 1617 ξεκίνησε από τη Σκωτία απο τον μαθηματικό John Napier και Jost Bürgi (1552-1632) πρωτοστάτησαν στο πεδίου των λογαρίθμων με το \"Mirifici logarithmorum canonis\" descriptio \"που εμφανίζεται το 1614, σχεδιασμένο για πολλαπλασιασμό και διαίρεση, με βάση την αρχή του Πυθαγόρειου άβακα. (1550-1617).\nΟ άβακάς του Napier, γνωστό και ως οστά του Napier (Napier's bones).\nNapier's bones\nΠαρόμοια με τα οστά του Napier:\nCaspar Schott (1608-1666), \"Organum Mathematicum\" (1668)\nΗ ιδέα του Leibniz για την εφαρμογή του δυαδικού αριθμητικού συστήματος σε ένα αυτοματισμό πραγματοποιήθηκε με μια εφεύρεση στην κλωστοϋφαντουργία. Το έτος 1725 ο Βασίλειος Μπουτσών ανέπτυξε το πρώτο σύστημα αυτόματου ελέγχου αργαλειών.\nBabbage-Lovelace 18ος αιώνας\nΒασικός στόχος του Babbage είναι η μηχανοποίηση των διαδικασιών υπολογισμού, όπως αυτές απαιτούνται για τη δημιουργία πινάκων λογαρίθμου.\nΠαράλληλα με το Babbage, η Ada Countess of Lovelace (1815-1852) διαδραμάτισε σημαντικό ρόλο. Ήταν ένας αυτοδίδακτος μαθηματικός και συνεργάστηκε με τον Babbage στην έννοια του «αναλυτικού κινητήρα».\nAda Lovelace\nΤο 1840, ο Babbage έδωσε μια σειρά μαθημάτων ανάγνωσης στο Τορίνο για την εφεύρεσή του. Με βάση αυτό το υλικό, ο Ιταλός μαθηματικός Luigi Federico Menabrea δημοσίευσε το άρθρο «Κουρτίνας για την Αναλυτική Μηχανή του Τσαρλς Μπάμπατζ» το 1842. Ada Lovelace μετάφραστε αυτό το κείμενο στα αγγλικά το 1843 και πρόσθεσε τις δικέ της αναλυτικές εκτιμήσεις για το υλικό, συμπεριλαμβανομένων των εννοιώ του βρόχου, της υπορουτίνας και του άλματος υπό όρους. Η κοντέσσα της Lovelace θεωρείται η πρώτη γυναίκα προγραμματιστής στην ιστορία του προγραμματισμού ηλεκτρονικών υπολογιστών - το πρόγραμμα Ada, που αναπτύχθηκε στη δεκαετία του 1970, πήρε το όνομά της.\nΕπιπλέον, μπορούν να βρεθούν οι πρώτες εφαρμογές αλγορίθμων για εργασίες σύνθεσης στο δημοφιλές \"μουσικό παιχνίδι με ζάρια\" τον 18ο αιώνα. (Nierhaus 2009)\nΛογικές λειτουργίες\nBoole (1815-1864)\nΟ George Boole (1815-1864) ο οποίος ανέπτυξε στο συγγραφικό του έργο «Η Μαθηματική Ανάλυση της Λογικής» (1847) και «Διερεύνηση των νόμων της σκέψης» (1854) έχει εκπροσωπήσει τον φορμαλισμό για την παρουσίαση της προτασιακής λογικής.\nShannon (1916-2001)\nAlgebra Boolean σε ηλεκτρονικά κυκλώματα\n  X1\u0026or;(X4\u0026and;(X2\u0026and;X3))  ο Γιάννης Ξενάκης (1922-2001) σε διάφορες συνθέσεις του εφάρμοσε λογικούς συνδυασμούς για τη δημιουργία μουσικής δομής από τη θεωρία των κοσκίνων.\nΕπίσης, το \"formalists\" του David Hilbert (1862-1943).\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/sc-examples/",
	"title": "Code Examples",
	"tags": [],
	"description": "",
	"content": "Chapter 2 SuperCollider examples of Sound Synthesis techniques and Algorithmic Composition.\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/sc-examples/supercollider/",
	"title": "SuperCollider",
	"tags": [],
	"description": "",
	"content": "SuperCollider SuperCollider From: SuperCollider\nBasics SuperCollider is a platform for audio synthesis and algorithmic composition, used by musicians, artists, and researchers working with sound. It is free and open source software available for Windows, macOS, and Linux.\nSuperCollider features three major components:  scsynth, a real-time audio server, forms the core of the platform. It features 400+ unit generators (\"UGens\") for analysis, synthesis, and processing. Its granularity allows the fluid combination of many known and unknown audio techniques, moving between additive and subtractive synthesis, FM, granular synthesis, FFT, and physical modelling. You can write your own UGens in C++, and users have already contributed several hundred more to the sc3-plugins repository. sclang, an interpreted programming language. It is focused on sound, but not limited to any specific domain. sclang controls scsynth via Open Sound Control. You can use it for algorithmic composition and sequencing, finding new sound synthesis methods, connecting your app to external hardware including MIDI controllers, network music, writing GUIs and visual displays, or for your daily programming experiments. It has a stock of user-contributed extensions called Quarks. scide is an editor for sclang with an integrated help system.  Find recordings folder thisProcess.platform.recordingsDir;  Sound synthesis techniques Introduction to sound synthesis and sound design (origin, definition, procedures, application fields).\n  SuperCollider example:  Creating a sine wave  {SinOsc.ar(440, 0, 0.3)}.play    Additive synthesis  {SinOsc.ar(440, 0, 0.4)+SinOsc.ar(660, 0, 0.3)}.play;    Subtractive synthesis  {LPF.ar(Saw.ar(440, 0.4), [3520, 4400, 5280], 0.3)}.play;    Granular synthesis  SynthDef(\\granular, {|out = 0, trig = 1, dur = 0.1, sndbuf, pos = 0.2, rate = 1, pan = 0, amp = 0.4| var env, source; env = EnvGen.kr(Env.adsr, 1, doneAcion: 2); source = Out.ar(out, GrainBuf.ar(2, Impulse.kr(trig), dur, sndbuf, rate, pos, 2, pan, envbuf) * env) }).add;  Input Devices Musical gestures can be expressed through a wide range of body movements. Dozens of input devices have been developed to capture these gestures. (Roads 1996: 625)\n  Switch  Push buttons  Linear potentiometer or fader  Trackball  Joystick  Game Paddles  etc  Instrument design Bela\nCapacitive touch sensor-raspberry pi\nMPR121\n  To be continued...  "
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/introduction/paradigms/",
	"title": "Παραδείγματα",
	"tags": [],
	"description": "",
	"content": "Chapter 1 Παραδειγματα Μαρκοβιανά Μοντέλα - Markov models time dependent random variables (TDRV)\nΣτο πλαίσιο των πειραμάτων και παρατηρήσεων σχετικά με την TDRV έχουν ήδη γίνει από τους Pierre Simon de Laplace και Daniel Bernoulli. Η πρώτη εφαρμογή αυτής της μεθόδου ήταν μια εκτενή ανάλυση κειμένου από τον Markov: \"Το 1913 ο Markov είχε δημοσιεύσει την τρίτη έκδοση του εγχειριδίου του. Σε αυτή την έκδοση γράφει: «Ας τελειώσουμε το άρθρο και ολόκληρο το βιβλίο με ένα καλό παράδειγμα TDRV, που μπορούν να θεωρηθούν ως μια απλή αλυσίδα» (chain).\n Markov chains or models    Markov chain - Markov process: Ένα στοχαστικό μοντέλο ή διαδικασία ... η πιθανότητα κάθε συμβάν εξαρτάται μόνο από την κατάσταση που επιτεύχθηκε στο προηγούμενο συμβάν.  Ο όρος \"αλυσίδα Markov\" (ή Markov Models για αυτή την κατηγορία των στοχαστικών διαδικασιών χρησιμοποιήθηκε για πρώτη φορά το 1926 σε μια δημοσίευση του Ρώσου μαθηματικού Σεργκέι Νατανοβιτς Μπερνστάιν.\nΟ Markov μελέτησε τη σειρά των 20.000 γραμμάτων στο ποίημα του AS Pushkin «Eugeny Onegin», ανακαλύπτοντας ότι η σταθερή πιθανότητα των φωνηέντων σε αυτό το ποίημα είναι p = 0,432, η πιθανότητα ενός φωνήεντος να ακολουθείται απο ένα άλλο είναι p1 = 0,128 και ότι η πιθανότητα ενός φωνήεντος να ακολουθείται απο σύμφωνο είναι p2 = 0.663. (στοχατική διαδικασία)\n  Stochastic processes are used to describe a sequence of random events dependent on the time parameter (t).  To πεδίο της στοχαστικής διαδικασίας περιλαμβάνei υπολογίσμο πιθανοτήτων, (probability calculus) και σταστιστική.\nΣε μια στοχαστική αλυσίδα, κάθε διακριτός χρόνος t έχει μια τυχαία μεταβλητή Χ. Σε μια αλυσίδα Markov, η οποία είναι ένα ιδιαίτερο είδος στοχαστικής αλυσίδας, η πιθανότητα της μελλοντικής κατάστασης Xtm+1 (η τυχαία μεταβλητ Χ τη στιγμή t + 1) εξαρτάται από την τρέχουσα κατάσταση Xt. Για τους δεδομένους χρόνους tm και tm+1, αυτή η πιθανότητα είναι:\n  Stochastic Process  P(Xtm+1=j|Xtm=i)=Pij(tm,tm+1)  Markov models in algorithmic composition\nH εφαρμογή των διεργασιών Markov στη δημιουργία μουσικών δομών Εξετάστηκε πρώτα από τον Harry F. Olson (1901-1982) περίπου το 1950. Ο Olson ήταν Αμερικανός ηλεκτρολόγος μηχανικός και φυσικός που επικεντρώθηκε στην ακουστική έρευνα. Μαζί με τον Χένρι Belar, ανέπτυξε το \"Electronic Synthesizer\" το 1955, το πρώτο μηχάνημα που ονομάστηκε συνθεσάιζερ.\ntransition probabilities\nΟ Hiller και ο Isaacson χρησιμοποιούν Markov μοντέλα για την παραγωγή της μουσικής δομής. Μεταξύ άλλων, αυτά τα μοντέλα Markov χρησιμεύουν για την μουσική σύνθεση διαφόρων ειδών μουσική.\nHiller \u0026 Iaacson: The Illiac Suite\nΤα μοντέλα Markov χρησιμοποιούνται ως επί το πλείστον στον τομέα της μίμησης του στυλ μουσικής. Έχουν χρησιμοποιηθεί και απο τον Ξενάκη, σαν τεχνικές σύνθεσης μουσικής στα έργα του το 1958. Στα \"Analogique A\" χρησιμοποιούνται μοντέλα Markov για την οργάνωση τμημάτων διαφορετικής πυκνότητας.\nΠερισσότερα στο Κεφάλαιο 3 - Markov Models.\nXenakis Analogique A\nGenerative grammars Οι γενετικές γραμματικές είναι μέθοδοι για την αλγοριθμική σύνθεση και τη μουσική ανάλυση. Το βασικό γλωσσικό μοντέλο που ανέπτυξε ο Noam Chomsky το 1957, είναι το αρχικό σημείο για την εφαρμογή αυτών των γενικών αρχών στη μουσική.\nTHe representation of language rules have been classified into four types (zero to three) by Noam Chomsky (1957) (Holtzman 2015)\nΤα έργα των Roads, Steedman, Sundberg, Lerdahl, Jackendoff και άλλων από τη δεκαετία του '70 αναδεικνύουν την εφαρμογή γενετικών γραμματικών στην παραγωγή και την ανάλυση της μουσικής δομής. Τα πεδία που χρησιμοποιούν συχνά γενετικές γραμματικές είναι η παραδοσιακή ευρωπαϊκή μουσική, η τζαζ, καθώς και η μουσική εθνολογία. Σχετικοί φορμαλισμοί με τις γενετικές γραμματικές είναι τα αυξημένα μεταβατικά δίκτυα (augmented transition networks), τα οποία χρησιμοποιούνται στην περίπτωση του David Cope.\nΜεταβατικά δίκτυα-Transition networks Το πρόγραμμα του David Cope “EMI” Το “EMI” δημιουργεί απομιμήσεις αφού πρώτα αναλύσει έναν επαρκή αριθμό συνθέσεων ενός συγκεκριμένου είδους όπως για παράδειγμά νόμους και κανόνες σύνθεσης της σονάτας.\nEMI history\nchaos and self-similarity Ο όρος \"χάος\" προέρχεται από την ελληνική γλώσσα και αρχικά σήμαινε \"διάστημα\" ή \"άβυσσο\".\nΣήμερα, η λέξη χρησιμοποιείται συνειδητά με την έννοια της \"διαταραχής\", όρος που αποκτήθηκε τον 17ου αιώνα. Σε ένα μαθηματικό και φυσικό περιβάλλον, η Χαοτική θεωρία σε στενότερη έννοια αναφέρεται επίσης ως η θεωρία της μη γραμμικής δυναμικής (non-linear dynamics). Το 1975, ο όρος \"χάος\" εισήχθη στον τομέα των μαθηματικών από τους Tien-Yien Li και James Yorke.\nΤο πιο γνωστό παράδειγμα περίπλοκης συμπεριφοράς συστήματος πηγαίνει πίσω στο Lorenz ο οποίος το 1963 ανέπτυξε ένα σύστημα τριών συζευγμένων μη γραμμικών διαφορικών εξισώσεων ως ένα απλοποιημένο μοντέλο για την ατμοσφαιρική ροή.\nΤο \"φαινόμενο της πεταλούδας\": Ένα πτερύγιο των πτερυγίων μιας πεταλούδας προκαλεί ελάχιστη αναταραχή, η οποία ωστόσο, κατά τη διάρκεια της ντετερμινιστικής χαοτικής ανάπτυξης του συστήματος, μπορεί να οδηγήσει σε εντελώς απρόβλεπτες μετεωρολογικές συνέπειες και σε πολύ απομακρυσμένες περιοχές.\nFractals, Lindenmayer systems\n Fractal geometry (Fragmented): Mandelbrot, Random walk, brown noise, etc L-systems: biology - Growth of living organisms such as algea and plants.  Γενετικοί αλγόριθμοι-Genetic algorithms Οι γενετικοί αλγόριθμοι ώς μιά κλάση των εξελικτικών αλγορίθμων (evolutionary algorithms), για παράδειγμα, στρατηγικών μοντέλων για φυσικά συστήματα, είναι στοχαστικές τεχνικές αναζήτησης.\nΤα βασικά μοντέλα εμπνεύστηκαν από τη θεωρία της εξέλιξης του Δαρβίνου.\nΟι Γενετικοί αλγόριθμοι, χρησιμοποιούνται για την μοντελοποίηση της εξελικτική διαδικασίας στον υπολογιστή.\nΗ ορολογία των γενετικών αλγορίθμων συμπεριλαμβανομένης της \"επιλογής\", της \"μετάλλαξης\", της \"επιβίωσης του ικανότερου\", κλπ. σχετίζεται με τις διαδικασίες βιολογικής επιλογής.\nΑπό τη δεκαετία του 1960, οι Ingo Rechenberg και Hans-Paul Schwefel εισήγαγαν τις στρατηγικές εξέλιξης στο Τεχνικό Πανεπιστήμιο του Βερολίνου και στη δεκαετία του 1970 οι Αμερικανοί John H. Holland και David E. Goldberg ανέπτυξαν γενετικούς αλγόριθμους. Τα μοντέλα Rechenberg και Schwefel βασίζονται σε μια γραφική παράσταση και έχουν διαμορφωθεί με βάση βιολογικές διαδικασίες για την ανάπτυξη τεχνικών τεχνικών βελτιστοποίησης.\nJohn Henry Holland\nGENETIC ALGORITHMS AND ADAPTATION\nΑυτή η κατηγορία αλγορίθμων είναι ιδιαίτερα κατάλληλη για εργασίες που είναι δύσκολο να μοντελοποιηθούν μαθηματικά και που δεν έχουν ένα σαφές σύστημα κανόνων.\nΚυτταρικά αυτόματα-Cellular automata Ο Miranda περιγράφει διάφορες εφαρμογές μοντέλων κυτταρικών αυτομάτων (CA) για μουσικές εφαρμογές. Σε ένα από αυτά, το Chaosynth, ένας χημικός ταλαντωτής χρησιμοποιείται για την παραμετροποίηση μιας μηχανής κοκκώδους σύνθεσης (Miranda 2000).\nNeural networks Artificial intelligence Swarm Algorithms  Συλλογική Συμπεριφορά   Η συμπεριφορά των σμήνων  Μαθηματικά μοντέλα για την προσομοίωση και την εκτέλεση της συμπεριφοράς.\nΤρεις βασικοί κανόνες\n Ακολουθήστε την ίδια κατεύθυνση με τους γείτονές σας Μείνετε κοντά στους γείτονές σας Αποφύγετε τις συγκρούσεις με τους γείτονές σας  Αλγόριθμοι ελέγχου\nSwarm Music\nΕκπαιδευτικά σεμινάρια\nΤο έργο του Tim Blackwell για τη μουσική Swarm\nΤο μοντέλο βασίζεται στον διαχωρισμό, την ευθυγράμμιση και τη συνοχή. Ο διαχωρισμός σημαίνει ότι κάθε πτηνό πρέπει να κατευθυνθεί έτσι ώστε να αποφευχθεί η πρόσκρουση μεταξύ τους ή με το περιβάλλον. Η ευθυγράμμιση κάθε πτηνού που κινείται σε παρόμοιο μονοπάτι λαμβάνοντας τη μέση τιμή των κεντρικών πτηνών. Η συνοχή διατηρεί το σμήνος μαζί, καθώς κάθε πτηνό κατευθύνεται προς τη μέση θέση των κεντρικών πτηνών.\nΟ Blackwell δημιούργησε έναν παρόμοιο αλγόριθμο ο οποίος παραμετροποιούσε μια μηχανή κοκκώδους σύνθεσης, δημιουργώντας σε ήχο την κίνηση του σμήνους σε σχέση με χρόνο.(Husbands 2007 22)\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/introduction/tuning_scales/",
	"title": "Κλίμακες και Χορδίσματα",
	"tags": [],
	"description": "",
	"content": "chapter 1 Scales Circle of fiths is the relationship among the 12 tones of the chromatic scale, their corresponding key signatures, and the associated major and minor keys.\nCircles of Fifths\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/introduction/glossary/",
	"title": "Glossary",
	"tags": [],
	"description": "",
	"content": "chapter 1 Glossary Mathematics\npremise a statement that is assumed to be true.\nPhysics\nfrequency the number of times that a wave, especially a light, sound, or radio wave, is produced within a particular period, especially one second.\namplitude the distance between the top and the bottom of a wave.\nComputing-SC\nfunction lamda calculus\nSC Function a = { [100, 200, 300].choose };\nSC Event An Event is a SC Environment with a 'play' method. An Event specifies an action to be taken in response to a -play message.\nSC Pattern creates a Stream that iterates an array.\nSC Stream Streams represent sequences of values that are obtained one at a time.\nSC Pbind The pattern Pbind connects specific patterns with specific names. Consult its help page for details.\n"
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/introduction/references/",
	"title": "References",
	"tags": [],
	"description": "",
	"content": "Chapter 1 References Dean, Roger. and McLean, Alex (eds.) 2018. The Oxford Handbook of Algorithmic Music. Oxford University Press.\nFarnell, Andy. 2010. Designing Sound. Cambridge, Mass: The MIT Press.\nHoltzman, Steven. 1981. Generative Grammars for Music Composition. Computer Music Journal, Vol.5, No.1, pp. 51-64. The MIT Press.\nHusbands, Phil, Peter Copley, Alice Eldridge, and James Mandelis. 2007. ‘An Introduction to Evolutionary Computing for Musicians’. In Evolutionary Computer Music, 1–27. Springer, London. https://doi.org/10.1007/978-1-84628-600-1_1.\nMiranda, Eduardo R., and John Al Biles. 2007. Evolutionary Computer Music. Springer Science \u0026 Business Media.\nNierhaus, Gerhard. 2008. Algorithmic Composition: Paradigms of Automated Music Generation. 2009 edition. Wien ; New York: Springer.\nRoads, Curtis. 1996. The Computer Music Tutorial. Edition Unstated edition. Cambridge, Mass: The MIT Press.\nRoads, Curtis. 2004. Microsound. PAP/CDR edition. Cambridge, Mass.: The MIT Press.\nSethares, William A. 2004. Tuning, Timbre, Spectrum, Scale. 2nd edition. London: Springer.\nTolonen, T., Välimäki, V., and Karjalainen, M. 1998. Evaluation of Modern Sound Synthesis Methods. HUT.\nTrautmann, Lutz, and Rudolf Rabenstein. 2012. Digital Sound Synthesis by Physical Modeling Using the Functional Transformation Method. Springer Science \u0026 Business Media.\nSites  http://doc.sccode.org/ http://supercollider.github.io/tutorials/ http://chuck.cs.princeton.edu/doc/language/ http://chuck.cs.princeton.edu/doc/learn/ https://www.gnu.org/software/emacs/manual/ https://guides.github.com https://ccrma.stanford.edu/~blackrse/algorithm.html https://dictionary.cambridge.org/dictionary/english/algorithm http://digicult.it/digimag/issue-055/athanasius-kircher-arca-musarithmica-and https://www.youtube.com/watch?v=9Zdg6Ec4mVw https://www.npmjs.com/package/mozart-dice-game http://doc.sccode.org/Classes/Shaper.html http://doc.sccode.org/Classes/Wavetable.html http://doc.sccode.org/Browse.html#UGens%3EGranularSynthesis https://www.youtube.com/watch?v=MotG3XI2qSs http://chuck.cs.princeton.edu/release/ http://chuck.cs.princeton.edu/doc/learn/tutorial.html http://chuck.cs.princeton.edu/doc/program/ugen.html http://www.johncage.org/reunion/ https://www.youtube.com/watch?v=iPgwF3G5i4k https://getchip.com https://www.raspberrypi.org https://community.dur.ac.uk/nick.collins/teaching/supercollider/advanced/ machinelearningresources.scd https://composerprogrammer.com/researchml.html https://luuma.net/code https://www.cc.gatech.edu/~turk/bio_sim/articles/genetic_algorithm.pdf  "
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://vasileios.github.io/ac-sc/el/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]